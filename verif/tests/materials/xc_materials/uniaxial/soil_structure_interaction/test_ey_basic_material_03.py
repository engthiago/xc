# -*- coding: utf-8 -*-
''' Use elastic perfectly plastic material to model a soil.
    Check results for predefined unloading then reloading path.'''

from __future__ import print_function

__author__= "Luis C. PÃ©rez Tato (LCPT)"
__copyright__= "Copyright 2024, LCPT"
__license__= "GPL"
__version__= "3.0"
__email__= "l.pereztato@gmail.com"

import math
import xc
from geotechnics import earth_pressure
from model import predefined_spaces
from materials import typical_materials
import numpy as np

# Define soil model.
phi= math.pi/6.0
rankineSoil= earth_pressure.RankineSoil(phi, rho= 2000, Kh= 15e5)

# Define depth and tributary area corresponding to the spring simulating
# the soil reaction.
depth= 3.0 # 3 m
tributaryArea= 1.5 # 1.5 m2
 # horizontal subgrade modulus.

# FE problem definition
feProblem= xc.FEProblem()
preprocessor=  feProblem.getPreprocessor
## Problem type
nodes= preprocessor.getNodeHandler
modelSpace= predefined_spaces.SolidMechanics1D(nodes)

## Nonlinear spring material
sg_v= rankineSoil.getVerticalStressAtDepth(z= depth)
nlSpringMaterial= rankineSoil.defHorizontalSubgradeReactionNlMaterial(preprocessor, name= 'nlSpringMaterial', sg_v= sg_v, tributaryArea= tributaryArea)

# Compute sample points.    
samplePoints, initStrain= earth_pressure.get_horizontal_soil_reaction_diagram(sg_v= sg_v, tributaryArea= tributaryArea, Ka= rankineSoil.Ka(), K0= rankineSoil.K0Jaky(), Kp= rankineSoil.Kp(), Kh= rankineSoil.Kh)

E0= rankineSoil.K0Jaky()*tributaryArea*rankineSoil.gamma()*depth
Ea= rankineSoil.Ka()*tributaryArea*rankineSoil.gamma()*depth
Ep= rankineSoil.Kp()*tributaryArea*rankineSoil.gamma()*depth
lowerBound= (samplePoints[0][0]-initStrain)/2.0
upperBound= (samplePoints[-1][0]-initStrain)/2.0

# Unload branch
nlSpringMaterial.revertToStart()
unloadFirst= list(np.linspace(0.0, upperBound, 50))
load= list(reversed(unloadFirst))
unloadDisplacements= unloadFirst+load
unloadDisplacements.append(-0.2)
unloadForces= list()
for disp in unloadDisplacements:
    nlSpringMaterial.setTrialStrain(float(disp), 0.0)
    nlSpringMaterial.commitState()
    unloadForces.append(nlSpringMaterial.getStress())

# Check results
refDisplacements= [0.0, 0.015010178571428568, 0.030020357142857137, 0.045030535714285704, 0.060040714285714274, 0.07505089285714284, 0.09006107142857141, 0.10507124999999998, 0.12008142857142855, 0.13509160714285712, 0.15010178571428567, 0.16511196428571426, 0.18012214285714281, 0.1951323214285714, 0.21014249999999995, 0.22515267857142854, 0.2401628571428571, 0.2551730357142857, 0.27018321428571423, 0.2851933928571428, 0.30020357142857135, 0.31521374999999996, 0.3302239285714285, 0.34523410714285707, 0.36024428571428563, 0.3752544642857142, 0.3902646428571428, 0.40527482142857135, 0.4202849999999999, 0.43529517857142846, 0.4503053571428571, 0.46531553571428563, 0.4803257142857142, 0.49533589285714275, 0.5103460714285714, 0.5253562499999999, 0.5403664285714285, 0.5553766071428571, 0.5703867857142856, 0.5853969642857142, 0.6004071428571427, 0.6154173214285713, 0.6304274999999999, 0.6454376785714284, 0.660447857142857, 0.6754580357142855, 0.6904682142857141, 0.7054783928571428, 0.7204885714285713, 0.7354987499999999, 0.7354987499999999, 0.7204885714285713, 0.7054783928571428, 0.6904682142857141, 0.6754580357142855, 0.660447857142857, 0.6454376785714284, 0.6304274999999999, 0.6154173214285713, 0.6004071428571427, 0.5853969642857142, 0.5703867857142856, 0.5553766071428571, 0.5403664285714285, 0.5253562499999999, 0.5103460714285714, 0.49533589285714275, 0.4803257142857142, 0.46531553571428563, 0.4503053571428571, 0.43529517857142846, 0.4202849999999999, 0.40527482142857135, 0.3902646428571428, 0.3752544642857142, 0.36024428571428563, 0.34523410714285707, 0.3302239285714285, 0.31521374999999996, 0.30020357142857135, 0.2851933928571428, 0.27018321428571423, 0.2551730357142857, 0.2401628571428571, 0.22515267857142854, 0.21014249999999995, 0.1951323214285714, 0.18012214285714281, 0.16511196428571426, 0.15010178571428567, 0.13509160714285712, 0.12008142857142855, 0.10507124999999998, 0.09006107142857141, 0.07505089285714284, 0.060040714285714274, 0.045030535714285704, 0.030020357142857137, 0.015010178571428568, 0.0, -0.2]

refForces= [-44129.924999999996, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -29419.950000000004, -63192.851785714374, -96965.7535714285, -130738.65535714288, -164511.55714285726, -198284.45892857137, -232057.36071428575, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993, -264779.54999999993]

errDisp= 0.0
for disp, refDisp in zip(unloadDisplacements, refDisplacements):
    errDisp+= (disp-refDisp)**2
errDisp= math.sqrt(errDisp)

errForce= 0.0
for f, refF in zip(unloadForces, refForces):
    errForce+= (f-refF)**2
errForce= math.sqrt(errForce)

'''
print(errDisp)
print(unloadForces)
print(errForce)
'''

import os
from misc_utils import log_messages as lmsg
fname= os.path.basename(__file__)
if((errDisp<1e-6) and (errForce<1e-6)):
    print('test '+fname+': ok.')
else:
    lmsg.error(fname+' ERROR.')    

# #  FIGURES & REPORTS
# import matplotlib.pyplot as plt
# plt.title("Force-displacement diagram")
# plt.xlabel('D (m)')
# plt.ylabel('F (kN)')
# plt.plot(unloadDisplacements, [f * 1e-3 for f in unloadForces])
# plt.plot(0.0, -E0*1e-3, 'go', label='at rest')
# plt.plot(0.1, -Ea*1e-3, 'bo', label='active')
# plt.plot(-0.2, -Ep*1e-3, 'ro', label='passive')
# plt.grid()
# plt.legend()
# plt.show()

