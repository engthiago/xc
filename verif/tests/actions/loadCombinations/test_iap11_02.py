# -*- coding: utf-8 -*-

from __future__ import print_function
import xc_base
import loadCombinations
from actions.load_combination_utils import iap11
from actions.load_combination_utils import utils
from misc_utils import log_messages as lmsg
import re
import math

def extractCoefficients(loadCombinations, actionNames):
    retval= list()
    base= xc_base.vector_string_from_py_list(actionNames)
    for comb in loadCombinations:
        coefs= comb.getCoeficientes(base)
        retval.append(xc_base.vector_double_to_py_list(coefs))
    return retval

def computeError(coefs, coefsRef):
    retval= 0.0
    for l,lRef in zip(coefs, coefsRef):
        for c, cRef in zip(l,lRef):
            retval+= (c-cRef)**2
    retval= math.sqrt(retval)
    return retval
    
lcg= iap11.controlCombGenerator
#print('*******', pond.permanentActions.gammaF.getGammaFELU.desfavorable)
actions= list()
G1= lcg.insert(weighting= "IAP11", family= "permanentes",action= loadCombinations.Action("G1", "Peso propio"), combination_factors_name= "permanentes", partial_safety_factors_name= "permanentes")
actions.append(G1)
G2= lcg.insert(weighting= "IAP11", family= "permanentes", action= loadCombinations.Action("G2", "Carga muerta"), combination_factors_name= "permanentes", partial_safety_factors_name= "permanentes")
actions.append(G2)
Q1= lcg.insert(weighting= "IAP11", family="variables", action= loadCombinations.Action("Q1", "Carga uniforme."), combination_factors_name= "SCuso_pasarelas", partial_safety_factors_name= "variables_SCuso")
actions.append(Q1)
Q2= lcg.insert(weighting= "IAP11", family="variables", action= loadCombinations.Action("Q2", "Carga horizontal en barandilla."), combination_factors_name= "SCuso_pasarelas",  partial_safety_factors_name= "variables_SCuso")
Q2.getRelaciones.appendMain("Q1")
actions.append(Q2)
Qviento= lcg.insert(weighting= "IAP11", family="variables", action= loadCombinations.Action("Qviento", "Viento transversal."), combination_factors_name= "viento_pasarelas", partial_safety_factors_name= "variables_SCuso")
actions.append(Qviento)
Qtemp1= lcg.insert(weighting= "IAP11", family="variables", action= loadCombinations.Action("Qtemp1", "Incremento temperatura."), combination_factors_name= "termica", partial_safety_factors_name= "variables_climatica")
Qtemp1.getRelaciones.appendIncompatible('Qviento')
actions.append(Qtemp1)
Qtemp2= lcg.insert(weighting= "IAP11", family="variables", action= loadCombinations.Action("Qtemp2", "Incremento temperatura."), combination_factors_name= "termica", partial_safety_factors_name= "variables_climatica")
Qtemp2.getRelaciones.appendIncompatible('Qviento')
Qtemp2.getRelaciones.appendIncompatible('Qtemp1')
actions.append(Qtemp2)
Qnieve= lcg.insert(weighting= "IAP11", family="variables", action= loadCombinations.Action("Qnieve", "Nieve."), combination_factors_name= "nieve_construccion", partial_safety_factors_name= "variables_climatica")
actions.append(Qnieve)
Asismo= lcg.insert(weighting= "IAP11", family="sismicas", action= loadCombinations.Action("Asismo", "Sismo."), combination_factors_name= "", partial_safety_factors_name= "sismicas")
actions.append(Asismo)

actionNames= list()
for a in actions:
    actionNames.append(a.name)
    
#lcg.setVerbosityLevel(3)
lcg.genera()
err= 0.0
eluPersist= lcg.getLoadCombinations.getULSTransientCombinations

gSmallRegex= re.compile('.*1.00\*G.*') # permanent load favourable.
gBigRegex= re.compile('.*1.35\*G.*') # permanent load favourable.
liveLoadRegex= re.compile('.*Q[12].*')
windRegex= re.compile('.*Qviento.*') # wind load present.
for comb in eluPersist:
    expr= comb.name
    gSmall= gSmallRegex.match(expr) # true if small permanent load.
    gBig= gBigRegex.match(expr) # true if big permanent load.
    liveLoad= liveLoadRegex.match(expr) # true if live load present.
    wind= windRegex.match(expr) # true if wind present.
    drop= False
    if(wind):
        drop= gBig # drop if big permanent load.
        drop= drop or liveLoad # drop if live load present.
    else:
        drop= gSmall # drop if small permanent load.
eluPersistCoefs= extractCoefficients(eluPersist, actionNames)
eluPersistCoefsRef= [[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 1.35, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0], [1.0, 1.0, 1.35, 0.0, 0.0, 0.0, 0.9, 1.2, 0.0], [1.0, 1.0, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.0, 0.0, 0.9, 0.0, 1.2, 0.0], [1.0, 1.0, 1.35, 0.0, 0.41, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.0, 0.41, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 1.35, 0.54, 0.0, 0.0, 0.9, 0.0, 0.0], [1.0, 1.0, 1.35, 0.54, 0.0, 0.0, 0.9, 1.2, 0.0], [1.0, 1.0, 1.35, 0.54, 0.0, 0.9, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.54, 0.0, 0.9, 0.0, 1.2, 0.0], [1.0, 1.0, 1.35, 0.54, 0.41, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.35, 0.54, 0.41, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 1.35, 0.0, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0], [1.0, 1.0, 0.54, 1.35, 0.0, 0.0, 0.9, 1.2, 0.0], [1.0, 1.0, 0.54, 1.35, 0.0, 0.9, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 1.35, 0.0, 0.9, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 1.35, 0.41, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 1.35, 0.41, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 0.0, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 0.54, 1.35, 0.0, 0.0, 1.2, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 1.5, 0.0, 0.0, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 1.5, 0.0, 1.2, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 0.0, 1.5, 1.2, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.0, 1.0, 0.0, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.0, 1.0, 0.54, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.0, 1.0, 0.54, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 0.0, 0.9, 1.5, 0.0], [1.0, 1.0, 0.54, 0.54, 0.0, 0.9, 0.0, 1.5, 0.0], [1.0, 1.0, 0.54, 0.54, 0.41, 0.0, 0.0, 1.5, 0.0], [1.0, 1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 1.35, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0], [1.0, 1.35, 1.35, 0.0, 0.0, 0.0, 0.9, 1.2, 0.0], [1.0, 1.35, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0], [1.0, 1.35, 1.35, 0.0, 0.0, 0.9, 0.0, 1.2, 0.0], [1.0, 1.35, 1.35, 0.0, 0.41, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 1.35, 0.0, 0.41, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 1.35, 0.54, 0.0, 0.0, 0.9, 0.0, 0.0], [1.0, 1.35, 1.35, 0.54, 0.0, 0.0, 0.9, 1.2, 0.0], [1.0, 1.35, 1.35, 0.54, 0.0, 0.9, 0.0, 0.0, 0.0], [1.0, 1.35, 1.35, 0.54, 0.0, 0.9, 0.0, 1.2, 0.0], [1.0, 1.35, 1.35, 0.54, 0.41, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 1.35, 0.54, 0.41, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 1.35, 0.0, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0], [1.0, 1.35, 0.54, 1.35, 0.0, 0.0, 0.9, 1.2, 0.0], [1.0, 1.35, 0.54, 1.35, 0.0, 0.9, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 1.35, 0.0, 0.9, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 1.35, 0.41, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 1.35, 0.41, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 0.0, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 0.0, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 0.54, 1.35, 0.0, 0.0, 1.2, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 1.5, 0.0, 0.0, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 1.5, 0.0, 1.2, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 0.0, 1.5, 1.2, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.0, 1.35, 0.0, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.0, 1.35, 0.0, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.0, 1.35, 0.54, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.0, 1.35, 0.54, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 0.0, 0.9, 1.5, 0.0], [1.0, 1.35, 0.54, 0.54, 0.0, 0.9, 0.0, 1.5, 0.0], [1.0, 1.35, 0.54, 0.54, 0.41, 0.0, 0.0, 1.5, 0.0], [1.35, 1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 1.35, 0.0, 0.0, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 1.35, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0], [1.35, 1.0, 1.35, 0.0, 0.0, 0.0, 0.9, 1.2, 0.0], [1.35, 1.0, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0], [1.35, 1.0, 1.35, 0.0, 0.0, 0.9, 0.0, 1.2, 0.0], [1.35, 1.0, 1.35, 0.0, 0.41, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 1.35, 0.0, 0.41, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 1.35, 0.54, 0.0, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 1.35, 0.54, 0.0, 0.0, 0.9, 0.0, 0.0], [1.35, 1.0, 1.35, 0.54, 0.0, 0.0, 0.9, 1.2, 0.0], [1.35, 1.0, 1.35, 0.54, 0.0, 0.9, 0.0, 0.0, 0.0], [1.35, 1.0, 1.35, 0.54, 0.0, 0.9, 0.0, 1.2, 0.0], [1.35, 1.0, 1.35, 0.54, 0.41, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 1.35, 0.54, 0.41, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 1.35, 0.0, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0], [1.35, 1.0, 0.54, 1.35, 0.0, 0.0, 0.9, 1.2, 0.0], [1.35, 1.0, 0.54, 1.35, 0.0, 0.9, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 1.35, 0.0, 0.9, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 1.35, 0.41, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 1.35, 0.41, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 0.0, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 0.0, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 0.54, 1.35, 0.0, 0.0, 1.2, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 1.5, 0.0, 0.0, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 1.5, 0.0, 1.2, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 0.0, 1.5, 1.2, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.35, 1.0, 0.0, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.35, 1.0, 0.0, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.35, 1.0, 0.54, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.35, 1.0, 0.54, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 0.0, 0.9, 1.5, 0.0], [1.35, 1.0, 0.54, 0.54, 0.0, 0.9, 0.0, 1.5, 0.0], [1.35, 1.0, 0.54, 0.54, 0.41, 0.0, 0.0, 1.5, 0.0], [1.35, 1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 1.35, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0], [1.35, 1.35, 1.35, 0.0, 0.0, 0.0, 0.9, 1.2, 0.0], [1.35, 1.35, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0], [1.35, 1.35, 1.35, 0.0, 0.0, 0.9, 0.0, 1.2, 0.0], [1.35, 1.35, 1.35, 0.0, 0.41, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 1.35, 0.0, 0.41, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 1.35, 0.54, 0.0, 0.0, 0.9, 0.0, 0.0], [1.35, 1.35, 1.35, 0.54, 0.0, 0.0, 0.9, 1.2, 0.0], [1.35, 1.35, 1.35, 0.54, 0.0, 0.9, 0.0, 0.0, 0.0], [1.35, 1.35, 1.35, 0.54, 0.0, 0.9, 0.0, 1.2, 0.0], [1.35, 1.35, 1.35, 0.54, 0.41, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 1.35, 0.54, 0.41, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 1.35, 0.0, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 1.35, 0.0, 0.0, 0.9, 0.0, 0.0], [1.35, 1.35, 0.54, 1.35, 0.0, 0.0, 0.9, 1.2, 0.0], [1.35, 1.35, 0.54, 1.35, 0.0, 0.9, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 1.35, 0.0, 0.9, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 1.35, 0.41, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 1.35, 0.41, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 0.0, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 0.0, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 0.0, 1.35, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 0.0, 1.35, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 0.54, 1.35, 0.0, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 0.54, 1.35, 0.0, 0.0, 1.2, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 1.5, 0.0, 1.2, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 1.5, 0.0, 0.0, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 1.5, 0.0, 1.2, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 1.5, 1.2, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 0.0, 1.5, 0.0, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 0.0, 1.5, 1.2, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.35, 1.35, 0.0, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.35, 1.35, 0.0, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 0.0, 1.5, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 0.0, 0.9, 1.5, 0.0], [1.35, 1.35, 0.54, 0.0, 0.0, 0.9, 0.0, 1.5, 0.0], [1.35, 1.35, 0.54, 0.0, 0.41, 0.0, 0.0, 1.5, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 0.0, 0.0, 1.5, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 0.0, 0.9, 1.5, 0.0], [1.35, 1.35, 0.54, 0.54, 0.0, 0.9, 0.0, 1.5, 0.0], [1.35, 1.35, 0.54, 0.54, 0.41, 0.0, 0.0, 1.5, 0.0]]

err+= computeError(eluPersistCoefs, eluPersistCoefsRef)

eluSeismic= lcg.getLoadCombinations.getULSSeismicCombinations
eluSeismicCoefs= extractCoefficients(eluSeismic, actionNames)
eluSeismicCoefsRef= [[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 1.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 1.0]]
err+= computeError(eluSeismicCoefs, eluSeismicCoefsRef)

elsCharacteristic= lcg.getLoadCombinations.getSLSCharacteristicCombinations
elsCharacteristicCoefs= extractCoefficients(elsCharacteristic, actionNames)
elsCharacteristicCoefsRef= [[1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.6, 0.0, 0.0], [1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.6, 0.8, 0.0], [1.0, 1.0, 1.0, 0.0, 0.0, 0.6, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 0.0, 0.0, 0.6, 0.0, 0.8, 0.0], [1.0, 1.0, 1.0, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 0.0, 0.3, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 1.0, 0.4, 0.0, 0.0, 0.6, 0.0, 0.0], [1.0, 1.0, 1.0, 0.4, 0.0, 0.0, 0.6, 0.8, 0.0], [1.0, 1.0, 1.0, 0.4, 0.0, 0.6, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 0.4, 0.0, 0.6, 0.0, 0.8, 0.0], [1.0, 1.0, 1.0, 0.4, 0.3, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 0.4, 0.3, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 1.0, 0.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 1.0, 0.0, 0.0, 0.6, 0.0, 0.0], [1.0, 1.0, 0.4, 1.0, 0.0, 0.0, 0.6, 0.8, 0.0], [1.0, 1.0, 0.4, 1.0, 0.0, 0.6, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 1.0, 0.0, 0.6, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 1.0, 0.3, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 1.0, 0.3, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 1.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 1.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 1.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 1.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 1.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 1.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 1.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 1.0, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.6, 0.0, 1.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.3, 0.0, 0.0, 1.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.6, 1.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.6, 0.0, 1.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.3, 0.0, 0.0, 1.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 0.0, 1.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 0.6, 1.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 1.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.3, 0.0, 0.0, 1.0, 0.0]]
err+= computeError(elsCharacteristicCoefs, elsCharacteristicCoefsRef)

elsFrequent= lcg.getLoadCombinations.getSLSFrequentCombinations
elsFrequentCoefs= extractCoefficients(elsFrequent, actionNames)
elsFrequentCoefsRef= [[1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.6, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.6, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 0.6, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.2, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.4, 0.4, 0.3, 0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.6, 0.0, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.6, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.6, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.6, 0.0, 0.8, 0.0], [1.0, 1.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.0, 0.6, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 0.0, 0.6, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.0, 0.2, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.0, 0.6, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 0.8, 0.0], [1.0, 1.0, 0.4, 0.4, 0.2, 0.0, 0.0, 0.8, 0.0]]
err+= computeError(elsFrequentCoefs, elsFrequentCoefsRef)

elsQuasiPermanent= lcg.getLoadCombinations.getSLSQuasiPermanentCombinations
elsQuasiPermanentCoefs= extractCoefficients(elsQuasiPermanent, actionNames)
elsQuasiPermanentCoefsRef= [[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0], [1.0, 1.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0]]
err+= computeError(elsQuasiPermanentCoefs, elsQuasiPermanentCoefsRef)

#print(err)
import os
fname= os.path.basename(__file__)
if (abs(err)<1e-6):
    print('test: '+fname+': ok.')
else:
    lmsg.error('test: '+fname+' ERROR.')
