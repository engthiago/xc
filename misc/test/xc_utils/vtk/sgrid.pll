\nverborrea{0}
\archivo_log{"log"}
\archivo_err{"err"}

\c{
\expr{dims0= 13}
\expr{dims1= 11}
\expr{dims2= 11}}

\expr{dims0= 5}
\expr{dims1= 4}
\expr{dims2= 4}


\expr{rMin= 0.5}
\expr{rMax= 1.0}
\vtk{
\define["vtkStructuredGrid","sgrid"]
  {
    \set_dimensions{dims0,dims1,dims2}
  }
\define["vtkDoubleArray","vectors"]
  {
    \set_number_of_components{3}
    \set_number_of_tuples{dims0*dims1*dims2}
  }
\define["vtkPoints","points"]
  {
    \allocate{dims0*dims1*dims2}
  }

\expr{deltaZ= 2.0/(dims2-1)}
\expr{deltaRad= (rMax-rMin) / (dims1-1)}
\expr{v2= 0}

\for
  {
    \inicio{\expr{k=0} } \continua{@tonum(k)<dims2} \incremento{\expr{k=@tonum(k+1)} }
    \bucle
       {
         \expr{x2= @tonum(-1+k*deltaZ)}
         \expr{kOffset= @tonum(k*dims0*dims1)}
         \for
            {
              \inicio{\expr{j=0}} \continua{j<dims1} \incremento{\expr{j=j+1}}
              \bucle
                {
                  \expr{radius= @tonum(rMin+j*deltaRad)}
                  \expr{jOffset= @tonum(j*dims0)}
                  \for
                    {
                      \inicio{\expr{i=0}} 
                      \continua{i<dims0} \incremento{\expr{i=i+1}}
                      \bucle
                        {
                          \expr{theta= @tonum(i*@deg2rad(15))}
                          \expr{x0= @tonum(radius*@cos(theta))}
                          \expr{x1= @tonum(radius*@sin(theta))}
                          \expr{v0= @tonum(-x1)}
                          \expr{v1= @tonum(x0)}
                          \expr{offset= @tonum(i+ jOffset + kOffset)}
                          \c{\print{"x0= ",x0," x1= ",x1," x2= ",x2,"\n"}}
                          \points{ \insert_point{offset,x0,x1,x2} }
                          \print{"v0= ",v0," v1= ",v1," v2= ",v2,"\n"}
                          \vectors{ \insert_tuple{offset,v0,v1,v2} }
                        }
                    }
                }
            }
        }
   }

\sgrid{ \set_points{"points"} }
\points{ \delete{} }
\sgrid{ \point_data{\set_vectors{"vectors"}} }
\vectors{ \delete{} }

\define["vtkHedgeHog","hedgehog"]
  {
    \set_input{"sgrid"}
    \scale_factor{0.1}
  }
\sgrid{ \print{} }
\hedgehog{ \print{} }

\define["vtkPolyDataMapper","sgridMapper"]{ \set_input{"hedgehog"} }

\sgridMapper{ \print{} }

\define["vtkActor","sgridActor"]
  {
    \set_mapper{"sgridMapper"}
    \property{\set_color{0,0,0}}
  }

\sgridActor{ \print{} }

\define["vtkRenderer","renderer"]{}
\define["vtkRenderWindow","renWin"]
  {
    \add_renderer{"renderer"}
  }
\define["vtkRenderWindowInteractor","iren"]
  { \set_render_window{"renWin"} }

\renderer
  {
    \add_actor{"sgridActor"}
    \set_background{1,1,1}
    \reset_camera{}
    \active_camera
      {
        \elevation{60}
        \azimuth{30}
        \zoom{1.25}
      }
  }
\renWin
  {
    \set_size{600,600}
    \render{}
  }

\iren{ \start{} }


\fin{}
}