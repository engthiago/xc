# -*- coding: utf-8 -*-
from __future__ import print_function

print("\\section{",caption," Análisis cinemático de cuñas y bloques.}\n")
print("\\begin{center}\n")
print("\\begin{tabular}{|l|c|c|}\n")
print("\\hline\n")
print("Familia & Buzamiento & Dir. buzamiento\\\\\n")
print("\\hline\n")
print("P1 &", rad2deg(alpha1)," & ",rad2deg(beta1),"\\\\\n")
print("P2 &", rad2deg(alpha2)," & ",rad2deg(beta2),"\\\\\n")
print("P3 &", rad2deg(alpha3)," & ",rad2deg(beta3),"\\\\\n")
print("\\hline\n")
print("\\multicolumn{3}{|l|}{Tunnel axis: ",tunnelAxisVector,"}\\\\\n")
print("\\hline\n")
print("\\end{tabular}\n")
print("\\end{center}\n")

processPolyhedralAngle(JP0000,nmbTun)
processPolyhedralAngle(JP0001,nmbTun)
processPolyhedralAngle(JP0010,nmbTun)
processPolyhedralAngle(JP0011,nmbTun)
processPolyhedralAngle(JP0100,nmbTun)
processPolyhedralAngle(JP0101,nmbTun)
processPolyhedralAngle(JP0110,nmbTun)
processPolyhedralAngle(JP0111,nmbTun)
processPolyhedralAngle(JP1000,nmbTun)
processPolyhedralAngle(JP1001,nmbTun)
processPolyhedralAngle(JP1010,nmbTun)
processPolyhedralAngle(JP1011,nmbTun)
processPolyhedralAngle(JP1100,nmbTun)
processPolyhedralAngle(JP1101,nmbTun)
processPolyhedralAngle(JP1110,nmbTun)
processPolyhedralAngle(JP1111,nmbTun)
